package com.ztlt.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class CheckRecordExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public CheckRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigDecimal value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPcIdIsNull() {
            addCriterion("PC_ID is null");
            return (Criteria) this;
        }

        public Criteria andPcIdIsNotNull() {
            addCriterion("PC_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPcIdEqualTo(BigDecimal value) {
            addCriterion("PC_ID =", value, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdNotEqualTo(BigDecimal value) {
            addCriterion("PC_ID <>", value, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdGreaterThan(BigDecimal value) {
            addCriterion("PC_ID >", value, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PC_ID >=", value, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdLessThan(BigDecimal value) {
            addCriterion("PC_ID <", value, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PC_ID <=", value, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdIn(List<BigDecimal> values) {
            addCriterion("PC_ID in", values, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdNotIn(List<BigDecimal> values) {
            addCriterion("PC_ID not in", values, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PC_ID between", value1, value2, "pcId");
            return (Criteria) this;
        }

        public Criteria andPcIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PC_ID not between", value1, value2, "pcId");
            return (Criteria) this;
        }

        public Criteria andTpIdIsNull() {
            addCriterion("TP_ID is null");
            return (Criteria) this;
        }

        public Criteria andTpIdIsNotNull() {
            addCriterion("TP_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTpIdEqualTo(BigDecimal value) {
            addCriterion("TP_ID =", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdNotEqualTo(BigDecimal value) {
            addCriterion("TP_ID <>", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdGreaterThan(BigDecimal value) {
            addCriterion("TP_ID >", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TP_ID >=", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdLessThan(BigDecimal value) {
            addCriterion("TP_ID <", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TP_ID <=", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdIn(List<BigDecimal> values) {
            addCriterion("TP_ID in", values, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdNotIn(List<BigDecimal> values) {
            addCriterion("TP_ID not in", values, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TP_ID between", value1, value2, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TP_ID not between", value1, value2, "tpId");
            return (Criteria) this;
        }

        public Criteria andValueIsNull() {
            addCriterion("VALUE is null");
            return (Criteria) this;
        }

        public Criteria andValueIsNotNull() {
            addCriterion("VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andValueEqualTo(String value) {
            addCriterion("VALUE =", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotEqualTo(String value) {
            addCriterion("VALUE <>", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueGreaterThan(String value) {
            addCriterion("VALUE >", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueGreaterThanOrEqualTo(String value) {
            addCriterion("VALUE >=", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLessThan(String value) {
            addCriterion("VALUE <", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLessThanOrEqualTo(String value) {
            addCriterion("VALUE <=", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLike(String value) {
            addCriterion("VALUE like", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotLike(String value) {
            addCriterion("VALUE not like", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueIn(List<String> values) {
            addCriterion("VALUE in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotIn(List<String> values) {
            addCriterion("VALUE not in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueBetween(String value1, String value2) {
            addCriterion("VALUE between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotBetween(String value1, String value2) {
            addCriterion("VALUE not between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andCrStateIsNull() {
            addCriterion("CR_STATE is null");
            return (Criteria) this;
        }

        public Criteria andCrStateIsNotNull() {
            addCriterion("CR_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andCrStateEqualTo(BigDecimal value) {
            addCriterion("CR_STATE =", value, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateNotEqualTo(BigDecimal value) {
            addCriterion("CR_STATE <>", value, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateGreaterThan(BigDecimal value) {
            addCriterion("CR_STATE >", value, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CR_STATE >=", value, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateLessThan(BigDecimal value) {
            addCriterion("CR_STATE <", value, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CR_STATE <=", value, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateIn(List<BigDecimal> values) {
            addCriterion("CR_STATE in", values, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateNotIn(List<BigDecimal> values) {
            addCriterion("CR_STATE not in", values, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CR_STATE between", value1, value2, "crState");
            return (Criteria) this;
        }

        public Criteria andCrStateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CR_STATE not between", value1, value2, "crState");
            return (Criteria) this;
        }

        public Criteria andCrRemarkIsNull() {
            addCriterion("CR_REMARK is null");
            return (Criteria) this;
        }

        public Criteria andCrRemarkIsNotNull() {
            addCriterion("CR_REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andCrRemarkEqualTo(String value) {
            addCriterion("CR_REMARK =", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkNotEqualTo(String value) {
            addCriterion("CR_REMARK <>", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkGreaterThan(String value) {
            addCriterion("CR_REMARK >", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("CR_REMARK >=", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkLessThan(String value) {
            addCriterion("CR_REMARK <", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkLessThanOrEqualTo(String value) {
            addCriterion("CR_REMARK <=", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkLike(String value) {
            addCriterion("CR_REMARK like", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkNotLike(String value) {
            addCriterion("CR_REMARK not like", value, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkIn(List<String> values) {
            addCriterion("CR_REMARK in", values, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkNotIn(List<String> values) {
            addCriterion("CR_REMARK not in", values, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkBetween(String value1, String value2) {
            addCriterion("CR_REMARK between", value1, value2, "crRemark");
            return (Criteria) this;
        }

        public Criteria andCrRemarkNotBetween(String value1, String value2) {
            addCriterion("CR_REMARK not between", value1, value2, "crRemark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated do_not_delete_during_merge Wed Feb 13 09:52:27 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_CHECK_RECORD
     *
     * @mbg.generated Wed Feb 13 09:52:27 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}