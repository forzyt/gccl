package com.ztlt.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class DrecordExample implements Serializable {

    protected int stratRow;
    protected int endRow;
    protected String name;
    protected String pFType;
    protected String pType;

    public int getStratRow() {
        return stratRow;
    }

    public void setStratRow(int stratRow) {
        this.stratRow = stratRow;
    }

    public int getEndRow() {
        return endRow;
    }

    public void setEndRow(int endRow) {
        this.endRow = endRow;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getpFType() {
        return pFType;
    }

    public void setpFType(String pFType) {
        this.pFType = pFType;
    }

    public String getpType() {
        return pType;
    }

    public void setpType(String pType) {
        this.pType = pType;
    }

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public DrecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigDecimal value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRIdIsNull() {
            addCriterion("R_ID is null");
            return (Criteria) this;
        }

        public Criteria andRIdIsNotNull() {
            addCriterion("R_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRIdEqualTo(BigDecimal value) {
            addCriterion("R_ID =", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotEqualTo(BigDecimal value) {
            addCriterion("R_ID <>", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThan(BigDecimal value) {
            addCriterion("R_ID >", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("R_ID >=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThan(BigDecimal value) {
            addCriterion("R_ID <", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("R_ID <=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdIn(List<BigDecimal> values) {
            addCriterion("R_ID in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotIn(List<BigDecimal> values) {
            addCriterion("R_ID not in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("R_ID between", value1, value2, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("R_ID not between", value1, value2, "rId");
            return (Criteria) this;
        }

        public Criteria andTpIdIsNull() {
            addCriterion("TP_ID is null");
            return (Criteria) this;
        }

        public Criteria andTpIdIsNotNull() {
            addCriterion("TP_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTpIdEqualTo(BigDecimal value) {
            addCriterion("TP_ID =", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdNotEqualTo(BigDecimal value) {
            addCriterion("TP_ID <>", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdGreaterThan(BigDecimal value) {
            addCriterion("TP_ID >", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TP_ID >=", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdLessThan(BigDecimal value) {
            addCriterion("TP_ID <", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TP_ID <=", value, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdIn(List<BigDecimal> values) {
            addCriterion("TP_ID in", values, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdNotIn(List<BigDecimal> values) {
            addCriterion("TP_ID not in", values, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TP_ID between", value1, value2, "tpId");
            return (Criteria) this;
        }

        public Criteria andTpIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TP_ID not between", value1, value2, "tpId");
            return (Criteria) this;
        }

        public Criteria andPdrValueIsNull() {
            addCriterion("PDR_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andPdrValueIsNotNull() {
            addCriterion("PDR_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andPdrValueEqualTo(String value) {
            addCriterion("PDR_VALUE =", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueNotEqualTo(String value) {
            addCriterion("PDR_VALUE <>", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueGreaterThan(String value) {
            addCriterion("PDR_VALUE >", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueGreaterThanOrEqualTo(String value) {
            addCriterion("PDR_VALUE >=", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueLessThan(String value) {
            addCriterion("PDR_VALUE <", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueLessThanOrEqualTo(String value) {
            addCriterion("PDR_VALUE <=", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueLike(String value) {
            addCriterion("PDR_VALUE like", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueNotLike(String value) {
            addCriterion("PDR_VALUE not like", value, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueIn(List<String> values) {
            addCriterion("PDR_VALUE in", values, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueNotIn(List<String> values) {
            addCriterion("PDR_VALUE not in", values, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueBetween(String value1, String value2) {
            addCriterion("PDR_VALUE between", value1, value2, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andPdrValueNotBetween(String value1, String value2) {
            addCriterion("PDR_VALUE not between", value1, value2, "pdrValue");
            return (Criteria) this;
        }

        public Criteria andDStateIsNull() {
            addCriterion("D_STATE is null");
            return (Criteria) this;
        }

        public Criteria andDStateIsNotNull() {
            addCriterion("D_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andDStateEqualTo(BigDecimal value) {
            addCriterion("D_STATE =", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateNotEqualTo(BigDecimal value) {
            addCriterion("D_STATE <>", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateGreaterThan(BigDecimal value) {
            addCriterion("D_STATE >", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("D_STATE >=", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateLessThan(BigDecimal value) {
            addCriterion("D_STATE <", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("D_STATE <=", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateIn(List<BigDecimal> values) {
            addCriterion("D_STATE in", values, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateNotIn(List<BigDecimal> values) {
            addCriterion("D_STATE not in", values, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("D_STATE between", value1, value2, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("D_STATE not between", value1, value2, "dState");
            return (Criteria) this;
        }

        public Criteria andDRemarkIsNull() {
            addCriterion("D_REMARK is null");
            return (Criteria) this;
        }

        public Criteria andDRemarkIsNotNull() {
            addCriterion("D_REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andDRemarkEqualTo(String value) {
            addCriterion("D_REMARK =", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkNotEqualTo(String value) {
            addCriterion("D_REMARK <>", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkGreaterThan(String value) {
            addCriterion("D_REMARK >", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("D_REMARK >=", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkLessThan(String value) {
            addCriterion("D_REMARK <", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkLessThanOrEqualTo(String value) {
            addCriterion("D_REMARK <=", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkLike(String value) {
            addCriterion("D_REMARK like", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkNotLike(String value) {
            addCriterion("D_REMARK not like", value, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkIn(List<String> values) {
            addCriterion("D_REMARK in", values, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkNotIn(List<String> values) {
            addCriterion("D_REMARK not in", values, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkBetween(String value1, String value2) {
            addCriterion("D_REMARK between", value1, value2, "dRemark");
            return (Criteria) this;
        }

        public Criteria andDRemarkNotBetween(String value1, String value2) {
            addCriterion("D_REMARK not between", value1, value2, "dRemark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated do_not_delete_during_merge Mon Jan 28 11:48:20 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_PROCESS_D_RECORD
     *
     * @mbg.generated Mon Jan 28 11:48:20 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}